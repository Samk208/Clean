diff --git a/app/shop/enhanced-page.tsx b/app/shop/enhanced-page.tsx
index 1234567..abcdef0 100644
--- a/app/shop/enhanced-page.tsx
+++ b/app/shop/enhanced-page.tsx
@@ -60,6 +60,7 @@ export default function EnhancedShopPage() {
   // Fetch products directly
   useEffect(() => {
     const fetchProducts = async () => {
+      console.log('Fetching products...')
       try {
         setLoading(true)
         const { createClient } = await import('@supabase/supabase-js')
@@ -75,6 +76,7 @@ export default function EnhancedShopPage() {
           .from('products')
           .select('*')
           .eq('active', true)
+          .eq('in_stock', true)
           .order('created_at', { ascending: false })
           .limit(12)
         
@@ -82,6 +84,7 @@ export default function EnhancedShopPage() {
         
         console.log('Direct fetch successful:', { data: data?.length, count })
         console.log('Setting products:', data)
+        console.log('Raw products data:', data)
         setProducts(data || [])
         setTotalCount(count || 0)
         setHasMore((data?.length || 0) === 12)
@@ -89,6 +92,7 @@ export default function EnhancedShopPage() {
       } catch (err) {
         console.error('Direct fetch error:', err)
         setError(err instanceof Error ? err.message : 'Failed to fetch products')
+        setProducts([])
       } finally {
         setLoading(false)
       }
@@ -96,6 +100,7 @@ export default function EnhancedShopPage() {
     fetchProducts()
   }, [filters.category, filters.search])
 
+  // Debug logging for state changes
+  useEffect(() => {
+    console.log('State updated:', { 
+      products: products.length, 
+      transformedProducts: transformedProducts.length, 
+      loading, 
+      totalCount,
+      hasMore 
+    })
+  }, [products, transformedProducts, loading, totalCount, hasMore])
+
   // Transform products to match ProductCard interface
   const transformProduct = (product: any) => ({
     id: product.id,
@@ -120,6 +125,7 @@ export default function EnhancedShopPage() {
   const transformedProducts = products.map(transformProduct)
   
   // Debug logging
+  console.log('Transform function result:', transformedProducts)
   console.log('Current state:', { products: products.length, transformedProducts: transformedProducts.length, loading, totalCount })
 
   const handleFiltersChange = (newFilters: ProductFiltersType) => {
@@ -270,6 +276,7 @@ export default function EnhancedShopPage() {
             {/* Products Display */}
             {!loading && transformedProducts.length > 0 && (
               <div className={cn(
                 "grid gap-6 mb-12",
                 viewMode === "grid" 
                   ? "grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3" 
                   : "grid-cols-1"
               )}>
+                {console.log('Rendering products:', transformedProducts)}
                 {transformedProducts.map((product) => (
                   <ProductCard
                     key={product.id}
@@ -277,6 +284,7 @@ export default function EnhancedShopPage() {
                     size={viewMode === "list" ? "lg" : "md"}
                     showSupplier={true}
                     onQuickView={handleQuickView}
+                    onAddToCart={() => console.log('Add to cart clicked for:', product.id)}
                   />
                 ))}
               </div>
@@ -284,6 +292,7 @@ export default function EnhancedShopPage() {
             {/* No Results */}
             {!loading && transformedProducts.length === 0 && (
               <div className="text-center py-16">
+                {console.log('No products to display. Products array:', products)}
                 <div className="w-24 h-24 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
                   <ShoppingCart className="h-12 w-12 text-gray-400" />
                 </div>
@@ -291,6 +300,7 @@ export default function EnhancedShopPage() {
                   No products found
                 </h3>
                 <p className="text-gray-600 mb-8">
+                  {console.log('Total count:', totalCount, 'Products length:', products.length)}
                   {totalCount === 0 
                     ? "No products have been added to the database yet." 
                     : "Try adjusting your filters or search terms to find what you're looking for."
